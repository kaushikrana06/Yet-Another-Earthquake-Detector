package module6;

import java.util.List;

import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.PointFeature;
import de.fhpotsdam.unfolding.marker.SimpleLinesMarker;
import processing.core.PGraphics;

/** 
 * A class to represent AirportMarkers on a world map.
 *   
 * @author Adam Setters and the UC San Diego Intermediate Software Development
 * MOOC team
 *
 */
public class AirportMarker extends CommonMarker {
	public static List<SimpleLinesMarker> routes;
	
	public AirportMarker(Feature city) {
		super(((PointFeature)city).getLocation(), city.getProperties());
	
	}
	
	@Override
	public void drawMarker(PGraphics pg, float x, float y) {
		pg.fill(11);
		pg.ellipse(x, y, 5, 5);
		
		
	}

	@Override
	public void showTitle(PGraphics pg, float x, float y) {
		 // show rectangle with title
		String name = getCity();
		String details;
		if (getCode() != null && ! getCode().isEmpty()) {
			details = getCode() + " | " + getCountry();
		} else {
			details = getCountry();
		}

		pg.pushStyle();

		pg.fill(254, 249, 231);
		pg.rect(-30, 500,
				Math.max(225, Math.max(pg.textWidth(name + 20), pg.textWidth(details + 48))), 50);

		pg.fill(255, 250, 240);
		pg.ellipse(23, 525, 35, 35);

		pg.fill(0, 0, 0);
		pg.textSize(12);
		pg.text(name, 48, 522);
		pg.text(details, 48, 534);

		pg.fill(0, 0, 0);
		pg.textSize(16);
		pg.text("info", 8, 530);

		pg.popStyle();

		// show routes
		for (SimpleLinesMarker route: routes) {
			route.setHidden(false)
		// show routes
		
		
	}
	
}
